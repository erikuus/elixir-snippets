<snippet>
	<content><![CDATA[
use $TM_NAMESPACE_WEB, :live_view

alias $TM_NAMESPACE.${4:Context}

def mount(_params, _session, socket) do
  if connected?(socket) do
    :timer.send_interval(1000, self(), :tick)
  end

  socket = assign_stats(socket)

  {:ok, socket}
end

def render(assigns) do
  ~L"""
  <h1>Dashboard</h1>
  <div id="dashboard">
    <div class="stats">
      <%= @users %>
    </div>
    <div class="stat">
      <%= @orders %>
    </div>
    <div class="stat">
      <%= @amount%>
    </div>
    <button phx-click="refresh">
      <img src="images/refresh.svg">
    </button>
  </div>
  """
end

def handle_event("refresh", _, socket) do
  socket = assign_stats(socket)
  {:noreply, socket}
end

def handle_info(:tick, socket) do
  socket = assign_stats(socket)
  {:noreply, socket}
end

defp assign_stats(socket) do
  assign(socket,
    users: ${4:Context}.users(),
    orders: ${4:Context}.orders(),
    amount: ${4:Context}.amount()
  )
end
]]></content>
  <tabTrigger>.live-view-dashboard</tabTrigger>
	<scope>source.elixir</scope>
	<description>- Live view dashboard module template</description>
</snippet>