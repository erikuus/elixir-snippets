<snippet>
	<content><![CDATA[
use $TM_NAMESPACE_WEB, :live_view

import $TM_NAMESPACE.UiComponent

alias $TM_NAMESPACE.${1:Context}

  def mount(_params, _session, socket) do
    if connected?(socket), do: Process.send_after(self(), :refresh, 1000)
    {:ok, assign_stats(socket)}
  end

def render(assigns) do
  ~H"""
  <.statset>
    <.stat label="Orders">
      <%= @orders %>
    </.stat>
    <.stat label="Amount">
      <%= @amount %>
    </.stat>
    <.stat label="Satisfaction">
      <%= @satisfaction %>
    </.stat>
  </.statset>
  """
end

def handle_info(:refresh, socket) do
  socket = assign_stats(socket)
  Process.send_after(self(), :refresh, 1000)
  {:noreply, socket}
end

defp assign_stats(socket) do
  assign(socket,
    users: ${1:Context}.users(),
    orders: ${1:Context}.orders(),
    amount: ${1:Context}.amount()
  )
end
]]></content>
  <tabTrigger>.live-view-dashboard</tabTrigger>
	<scope>source.elixir</scope>
	<description>- Live view dashboard module template</description>
</snippet>