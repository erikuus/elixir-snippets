<snippet>
  <content><![CDATA[
def handle_event("${1:save}", %{"${2:struct}" => params}, socket) do
  case ${3:Context}.create_${2:struct}(params) do
    {:ok, ${2:struct}} ->
      socket = update(socket, :${2:struct}s, &[${2:struct} | &1])

      changeset = ${3:Context}.change_${2:struct}(%${4:Schema}{})
      socket = assign(socket, changeset: changeset)

      {:noreply, socket}

    {:error, %Ecto.Changeset{} = changeset} ->
      socket = assign(socket, changeset: changeset)
      {:noreply, socket}
  end
end
]]></content>
  <tabTrigger>.handle-event-save</tabTrigger>
  <scope>source.elixir</scope>
  <description>- Handle save event</description>
</snippet>